[DEFAULT]
lock_path=/tmp
[baremetal]
{% if identity_admin.ec2_creds.access_token -%}
[boto]
ec2_url = {{ identity_admin.compute_info.nova_base }}:8773/services/Cloud
s3_url = {{ identity_admin.compute_info.nova_base }}:3333
aws_access = {{ identity_admin.ec2_creds.access_token }}
aws_secret = {{ identity_admin.ec2_creds.secret_token }}
{% endif -%}
[cli]
enabled=true
timeout=60
cli_dir=/usr/local/bin
[compute]
flavor_ref={{ identity_admin.compute_info.flavor_id }}
flavor_ref_alt={{ identity_admin.compute_info.flavor_alt_id }}
image_ssh_user={{ identity_admin.image_info.image_ssh_user }}
image_alt_ssh_user={{ identity_admin.image_info.image_alt_ssh_user }}
image_ref={{ identity_admin.image_info.image_id }}
image_ref_alt={{ identity_admin.image_info.image_alt_id }}
allow_tenant_isolation = true
allow_tenant_reuse = true
[compute-admin]
[compute-feature-enabled]
api_v3=false
console_output=false
resize=true
[dashboard]
dashboard_url={{ dashboard_url }}/horizon
login_url={{ dashboard_url }}/horizon/auth/login/
[data_processing]
[debug]
[auth]
default_credentials_domain_name = {{ identity_admin.keystone_info.default_credentials_domain_name }}
admin_username={{ identity_admin.keystone_info.service_username }}
admin_project_name={{ identity_admin.keystone_info.service_tenant_name }}
admin_password={{ identity_admin.keystone_info.service_password }}
admin_domain_name={{ identity_admin.keystone_info.service_user_domain_name }}

[identity]
admin_domain_scope=true
uri=http://{{ identity_admin.keystone_info.service_hostname }}:5000/v2.0
uri_v3=http://{{ identity_admin.keystone_info.service_hostname }}:5000/v3
username = demo
password = pass
tenant_name = demo
alt_username = alt_demo
alt_password = secret
alt_tenant_name = alt_demo
admin_role = Admin
auth_version=v{{ identity_admin.keystone_info.api_version }}
[identity-feature-enabled]
{% if identity_admin.keystone_info.api_version == 3 -%}
api_v3=true
api_v2=false
{% else -%}
api_v3=false
api_v2=true
{% endif -%}
[image]
http_image = http://{{ options.swift_undercloud_ep }}:80/swift/v1/images/cirros-0.3.3-x86_64-uec.tar.gz
[image-feature-enabled]
[input-scenario]
[network]
tenant_network_cidr={{ options.cidr_priv }}
public_network_id={{ identity_admin.network_info.public_network_id }}
{% if options.name_server -%}
dns_servers={{ options.name_server }}
{% endif -%}
tenant_networks_reachable = false
floating_network_name={{ identity_admin.network_info.floating_network_name }}
[network-feature-enabled]
ipv6=false
[object-storage]
accounts_quotas_available = True
container_quotas_available = True
[object-storage-feature-enabled]
[orchestration]
instance_type = m1.small
keypair_name = testkey
stack_owner_role = Admin
[scenario]
img_dir=/home/ubuntu/images
ssh_user=cirros
[service_available]
ceilometer = {{ identity_admin.service_info.ceilometer }}
cinder = {{ identity_admin.service_info.cinder }}
glance = {{ identity_admin.service_info.glance }}
heat = {{ identity_admin.service_info.heat }}
horizon = {{ identity_admin.service_info.horizon }}
ironic = {{ identity_admin.service_info.ironic }}
neutron = {{ identity_admin.service_info.neutron }}
nova = {{ identity_admin.service_info.nova }}
sahara = {{ identity_admin.service_info.sahara }}
swift = {{ identity_admin.service_info.swift }}
trove = {{ identity_admin.service_info.trove }}
zaqar = {{ identity_admin.service_info.zaqar }}
[stress]
max_instances = 4
[telemetry]
[volume]
storage_protocol=ceph
backend1_name=cinder-ceph
catalog_type = volume
[volume-feature-enabled]
backup=false
